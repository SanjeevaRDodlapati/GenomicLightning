# Example configuration for DeepSEA model
# This config demonstrates how to train a DeepSEA model using GenomicLightning

# Basic configuration
name: deepsea-example
seed: 42
output_dir: /home/sdodl001/GenomicLightning/outputs/deepsea

# Model configuration
model:
  class: DeepSEA
  args:
    sequence_length: 1000
    n_targets: 919
    conv_kernel_sizes: [8, 8, 8]
    conv_channels: [320, 480, 960]
    pool_kernel_sizes: [4, 4, 4]
    dropout_rate: 0.2

# Lightning module configuration
lightning_module: DeepSEAModule
lightning_args:
  learning_rate: 0.0002
  weight_decay: 1e-6
  optimizer: adam
  scheduler: reduce_on_plateau

# Data configuration (using a UAVarPrior-style sampler)
sampler:
  !obj:uavarprior.samplers.IntervalsSampler
    input_path: /path/to/data/intervals.bed
    genome: hg38
    target_path: /path/to/data/targets.h5

data_args:
  batch_size: 64
  num_workers: 4
  max_train_samples: null  # Use all available training samples
  max_val_samples: 10000   # Use 10,000 validation samples
  max_test_samples: 10000  # Use 10,000 test samples
  cache_validation: true   # Cache validation samples in memory
  cache_test: true         # Cache test samples in memory

# Trainer configuration
trainer:
  max_epochs: 100
  gpus: 1
  precision: 16  # Use mixed precision training (FP16)
  accumulate_grad_batches: 2  # Effective batch size = batch_size * accumulate_grad_batches
  gradient_clip_val: 1.0  # Clip gradients to prevent explosion
  check_val_every_n_epoch: 1  # Validate after every epoch
  num_sanity_val_steps: 2  # Run 2 validation batches before starting training

# Early stopping configuration
early_stopping:
  enabled: true
  monitor: val_loss
  patience: 10
  mode: min
  verbose: true

# Model checkpoint configuration
model_checkpoint:
  enabled: true
  monitor: val_loss
  mode: min
  save_top_k: 1  # Save only the best model
  save_last: true  # Also save the last model
  filename: 'epoch={epoch}-val_loss={val_loss:.4f}'
  verbose: true

# Learning rate monitor
lr_monitor:
  enabled: true
  logging_interval: epoch
  log_momentum: false

# Logger configuration
logger:
  enabled: true
  type: tensorboard  # Options: tensorboard, wandb, csv
  save_dir: null  # Use default (output_dir/logs)
  name: deepsea
  version: null  # Auto-increment

# Test after training
test_after_train: true

# Prediction format (when using predict command)
prediction_format: h5  # Options: h5, npy, csv

# Example configuration for DanQ model training
experiment_name: danq_genomic_model

# Model configuration
model:
  class: "DanQModel"
  args:
    sequence_length: 1000
    n_genomic_features: 4
    n_outputs: 919
    conv_kernel_size: 26
    conv_filters: 320
    pool_size: 13
    pool_stride: 13
    lstm_hidden: 320
    dropout_rate: 0.2

# Lightning module configuration
lightning_module: "DanQLightningModule"
lightning_args:
  learning_rate: 0.0001
  weight_decay: 1e-6
  loss_function: "binary_cross_entropy"
  metrics:
    - "auroc"  # Default from torchmetrics
    - "genomic_auprc"  # Custom metric

# Data configuration
data:
  train_data_path: "data/train"
  val_data_path: "data/val"
  test_data_path: "data/test"
  batch_size: 32
  num_workers: 4
  in_memory: false
  
# Training configuration
trainer:
  max_epochs: 100
  accelerator: "auto"
  devices: "auto"
  gradient_clip_val: 1.0
  precision: 32
  log_every_n_steps: 50
  
# Callbacks
callbacks:
  early_stopping:
    monitor: "val_loss"
    patience: 10
    mode: "min"
  model_checkpoint:
    monitor: "val_loss"
    save_top_k: 3
    mode: "min"
  lr_monitor:
    logging_interval: "epoch"
    
# Logging
logger:
  tensorboard:
    save_dir: "logs"
    name: "danq_model"
    version: null  # Auto-increment
  
# Output paths
output_dir: "output"
checkpoint_dir: "checkpoints"
